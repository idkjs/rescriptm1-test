// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var TestUtils$Part2Workshop = require("./TestUtils.bs.js");

var divide = Caml_int32.div;

var divideLabelled = Caml_int32.div;

function modulo(dividend, divisor) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "ch12_labelledArguments.re",
          57,
          38
        ],
        Error: new Error()
      };
}

TestUtils$Part2Workshop.runTests("Ch12_labelledArguments-Part2Workshop", (function (param) {
        TestUtils$Part2Workshop.test("should calculate modulo", (function (param) {
                if (1 === modulo(7, 2)) {
                  return ;
                }
                throw {
                      RE_EXN_ID: "Assert_failure",
                      _1: [
                        "ch12_labelledArguments.re",
                        63,
                        6
                      ],
                      Error: new Error()
                    };
              }));
        TestUtils$Part2Workshop.test("should calculate modulo", (function (param) {
                if (0 === modulo(12, 4)) {
                  return ;
                }
                throw {
                      RE_EXN_ID: "Assert_failure",
                      _1: [
                        "ch12_labelledArguments.re",
                        66,
                        6
                      ],
                      Error: new Error()
                    };
              }));
        return TestUtils$Part2Workshop.test("should calculate modulo after reordering params", (function (param) {
                      if (8 === modulo(24, 16)) {
                        return ;
                      }
                      throw {
                            RE_EXN_ID: "Assert_failure",
                            _1: [
                              "ch12_labelledArguments.re",
                              69,
                              6
                            ],
                            Error: new Error()
                          };
                    }));
      }));

var top = 12;

var bottom = 4;

var dividend = 12;

var divisor = 4;

exports.divide = divide;
exports.divideLabelled = divideLabelled;
exports.top = top;
exports.bottom = bottom;
exports.dividend = dividend;
exports.divisor = divisor;
exports.modulo = modulo;
/*  Not a pure module */
